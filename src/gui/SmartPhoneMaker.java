/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.formdev.flatlaf.IntelliJTheme;
import java.awt.Color;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import model.AndroidPhone;
import model.IPhone;
import model.Registry;
import model.SmartPhoneType;

/**
 *
 * @author NUWAA
 */
public class SmartPhoneMaker extends javax.swing.JFrame {

    /**
     * Creates new form SmartPhoneMaker
     */
    public SmartPhoneMaker() {
        initComponents();
        isDefaultPhoneCheckBox.setSelected(true);
        defaultSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        selectSmartPhoneTypeComboBox = new javax.swing.JComboBox<>();
        isDefaultPhoneCheckBox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        brandTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        modelTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        storageTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ramTextField = new javax.swing.JTextField();
        displaySizeTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cameraTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();
        colorComboBox = new javax.swing.JComboBox<>();
        waterproofCheckBox = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        generateSmartPhoneButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SmartPhoneMaker");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Smart Phone Maker");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Select Smart Phone Type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        selectSmartPhoneTypeComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        selectSmartPhoneTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Android", "IPhone" }));

        isDefaultPhoneCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        isDefaultPhoneCheckBox.setText("Is Default Phone");
        isDefaultPhoneCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isDefaultPhoneCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(isDefaultPhoneCheckBox)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(selectSmartPhoneTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectSmartPhoneTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(isDefaultPhoneCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Select Smart Phone Type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Brand :");

        brandTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Model :");

        modelTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Color :");

        storageTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        storageTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                storageTextFieldKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Storage :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("RAM :");

        ramTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ramTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ramTextFieldKeyTyped(evt);
            }
        });

        displaySizeTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        displaySizeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                displaySizeTextFieldKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Display Size :");

        cameraTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cameraTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cameraTextFieldKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Camera :");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Price :");

        priceTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        priceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceTextFieldKeyTyped(evt);
            }
        });

        colorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "White", "Blue" }));

        waterproofCheckBox.setText("Waterproof");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brandTextField))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modelTextField))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(colorComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(storageTextField))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ramTextField))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displaySizeTextField))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cameraTextField))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceTextField))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(waterproofCheckBox)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(brandTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(colorComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(storageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ramTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(displaySizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cameraTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(waterproofCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        generateSmartPhoneButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        generateSmartPhoneButton.setText("Generate Smart Phone");
        generateSmartPhoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateSmartPhoneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generateSmartPhoneButton, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generateSmartPhoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void isDefaultPhoneCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isDefaultPhoneCheckBoxActionPerformed
        // TODO add your handling code here:
        defaultSelected();
    }//GEN-LAST:event_isDefaultPhoneCheckBoxActionPerformed

    private void generateSmartPhoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateSmartPhoneButtonActionPerformed
        // TODO add your handling code here:
        Registry registry = new Registry();

        String brand = brandTextField.getText();
        String model = modelTextField.getText();
        String color = colorComboBox.getSelectedItem().toString();
        String storage = storageTextField.getText();
        String ram = ramTextField.getText();
        String displaysize = displaySizeTextField.getText();
        String camera = cameraTextField.getText();
        boolean waterproof = waterproofCheckBox.isSelected();
        String price = priceTextField.getText();

        if (selectSmartPhoneTypeComboBox.getSelectedItem().toString().equals("Android")) {
            AndroidPhone androidPhone = (AndroidPhone) registry.getSmartPhone(SmartPhoneType.ANDROID_PHONE);
            if (isDefaultPhoneCheckBox.isSelected()) {
                GenerateSmartPhone generateSmartPhone = new GenerateSmartPhone(androidPhone);
                generateSmartPhone.setVisible(true);
            } else {
                if (brand.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Brand", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (model.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Model", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (storage.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Storage", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (ram.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the RAM", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (displaysize.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Display Size", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (camera.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Camera", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (price.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Price", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    androidPhone.setBrand(brand);
                    androidPhone.setModel(model);
                    switch (color) {
                        case "Black":
                            androidPhone.setColor(Color.BLACK);
                            break;
                        case "White":
                            androidPhone.setColor(Color.WHITE);
                            break;
                        case "Blue":
                            androidPhone.setColor(Color.BLUE);
                            break;
                        default:
                            break;
                    }
                    androidPhone.setStorage(Integer.parseInt(storage));
                    androidPhone.setRam(Integer.parseInt(ram));
                    androidPhone.setDisplaySize(Double.parseDouble(displaysize));
                    androidPhone.setCamera(Double.parseDouble(camera));
                    androidPhone.setWaterProof(waterproof);
                    androidPhone.setPrice(Double.parseDouble(price));
                    GenerateSmartPhone generateSmartPhone = new GenerateSmartPhone(androidPhone);
                    generateSmartPhone.setVisible(true);
                    setDefault();
                }
            }
        } else {
            IPhone iPhone = (IPhone) registry.getSmartPhone(SmartPhoneType.I_PHONE);
            if (isDefaultPhoneCheckBox.isSelected()) {
                GenerateSmartPhone generateSmartPhone = new GenerateSmartPhone(iPhone);
                generateSmartPhone.setVisible(true);
            } else {

                if (brand.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Brand", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (model.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Model", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (storage.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Storage", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (ram.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the RAM", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (displaysize.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Display Size", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (camera.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Camera", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (price.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter the Price", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    iPhone.setBrand(brand);
                    iPhone.setModel(model);
                    switch (color) {
                        case "Black":
                            iPhone.setColor(Color.BLACK);
                            break;
                        case "White":
                            iPhone.setColor(Color.WHITE);
                            break;
                        case "Blue":
                            iPhone.setColor(Color.BLUE);
                            break;
                        default:
                            break;
                    }
                    iPhone.setStorage(Integer.parseInt(storage));
                    iPhone.setRam(Integer.parseInt(ram));
                    iPhone.setDisplaySize(Double.parseDouble(displaysize));
                    iPhone.setCamera(Double.parseDouble(camera));
                    iPhone.setWaterProof(waterproof);
                    iPhone.setPrice(Double.parseDouble(price));
                    GenerateSmartPhone generateSmartPhone = new GenerateSmartPhone(iPhone);
                    generateSmartPhone.setVisible(true);
                    setDefault();
                }
            }
        }


    }//GEN-LAST:event_generateSmartPhoneButtonActionPerformed

    private void storageTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_storageTextFieldKeyTyped
        // TODO add your handling code here:
        if (((!Character.isDigit(evt.getKeyChar())))) {
            evt.consume();
        }
    }//GEN-LAST:event_storageTextFieldKeyTyped

    private void ramTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ramTextFieldKeyTyped
        // TODO add your handling code here:
        if (((!Character.isDigit(evt.getKeyChar())))) {
            evt.consume();
        }
    }//GEN-LAST:event_ramTextFieldKeyTyped

    private void displaySizeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_displaySizeTextFieldKeyTyped
        // TODO add your handling code here:
        if (((Character.isDigit(evt.getKeyChar())) | (String.valueOf(evt.getKeyChar()).equals(".")))) {
            if (displaySizeTextField.getText().contains(".")) {
                if (!Character.isDigit(evt.getKeyChar())) {
                    evt.consume();
                }
            }
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_displaySizeTextFieldKeyTyped

    private void cameraTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cameraTextFieldKeyTyped
        // TODO add your handling code here:
        if (((Character.isDigit(evt.getKeyChar())) | (String.valueOf(evt.getKeyChar()).equals(".")))) {
            if (cameraTextField.getText().contains(".")) {
                if (!Character.isDigit(evt.getKeyChar())) {
                    evt.consume();
                }
            }
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_cameraTextFieldKeyTyped

    private void priceTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTextFieldKeyTyped
        // TODO add your handling code here:
        if (((Character.isDigit(evt.getKeyChar())) | (String.valueOf(evt.getKeyChar()).equals(".")))) {
            if (priceTextField.getText().contains(".")) {
                if (!Character.isDigit(evt.getKeyChar())) {
                    evt.consume();
                }
            }
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_priceTextFieldKeyTyped

    private void defaultSelected() {
        if (isDefaultPhoneCheckBox.isSelected()) {
            brandTextField.setEditable(false);
            modelTextField.setEditable(false);
            colorComboBox.setEnabled(false);
            storageTextField.setEditable(false);
            ramTextField.setEditable(false);
            displaySizeTextField.setEditable(false);
            cameraTextField.setEditable(false);
            waterproofCheckBox.setEnabled(false);
            priceTextField.setEditable(false);
        } else {
            brandTextField.setEditable(true);
            modelTextField.setEditable(true);
            colorComboBox.setEnabled(true);
            storageTextField.setEditable(true);
            ramTextField.setEditable(true);
            displaySizeTextField.setEditable(true);
            cameraTextField.setEditable(true);
            waterproofCheckBox.setEnabled(true);
            priceTextField.setEditable(true);
        }
    }

    private void setDefault() {
        brandTextField.setText("");
        modelTextField.setText("");
        colorComboBox.setSelectedIndex(0);
        storageTextField.setText("");
        ramTextField.setText("");
        displaySizeTextField.setText("");
        cameraTextField.setText("");
        waterproofCheckBox.setSelected(false);
        priceTextField.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SmartPhoneMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SmartPhoneMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SmartPhoneMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SmartPhoneMaker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }

        try {
//            UIManager.setLookAndFeel(new FlatLightLaf());
            IntelliJTheme.setup(SmartPhoneMaker.class.getResourceAsStream(
                    "/resources/themes/arc-theme.theme.json"));
            UIManager.put("Table.showHorizontalLines", true);
            UIManager.put("Table.showVerticalLines", true);
            UIManager.put("ScrollBar.showButtons", true);
            UIManager.put("ScrollBar.width", 16);
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SmartPhoneMaker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField brandTextField;
    private javax.swing.JTextField cameraTextField;
    private javax.swing.JComboBox<String> colorComboBox;
    private javax.swing.JTextField displaySizeTextField;
    private javax.swing.JButton generateSmartPhoneButton;
    private javax.swing.JCheckBox isDefaultPhoneCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JTextField ramTextField;
    private javax.swing.JComboBox<String> selectSmartPhoneTypeComboBox;
    private javax.swing.JTextField storageTextField;
    private javax.swing.JCheckBox waterproofCheckBox;
    // End of variables declaration//GEN-END:variables
}
